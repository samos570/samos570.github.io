<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.3">Jekyll</generator><link href="https://samos570.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://samos570.github.io/" rel="alternate" type="text/html" /><updated>2018-07-09T10:23:00-04:00</updated><id>https://samos570.github.io/</id><title type="html">MathSlant</title><subtitle>A blog about the mathematics of AI.</subtitle><author><name>Justin Keller</name></author><entry><title type="html">Learning Like Putty</title><link href="https://samos570.github.io/learning-like-putty/" rel="alternate" type="text/html" title="Learning Like Putty" /><published>2018-07-09T00:00:00-04:00</published><updated>2018-07-09T00:00:00-04:00</updated><id>https://samos570.github.io/learning-like-putty</id><content type="html" xml:base="https://samos570.github.io/learning-like-putty/">&lt;h2 id=&quot;how-does-machine-learning-work-an-analogy&quot;&gt;How does machine learning work? An analogy.&lt;/h2&gt;

&lt;p&gt;Let’s start with an analogy. Suppose you want to make a model of a complicated
surface, like a topographical map of the United States. One way would be to
make many detailed careful measurements, and create a set of blueprints for
recreating all the individual mountains and valleys on the map, then build your
model from those measurements.&lt;/p&gt;

&lt;p&gt;What you created with your measurements was a set of detailed instructions for
recreating that specific map. If the map was swapped out with another one, say
a topographical map of Canada, your measurements would no longer be helpful.&lt;/p&gt;

&lt;p&gt;What are the features of this approach?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The new model is only as good as the measurements made, which could be prone
to human error.&lt;/li&gt;
  &lt;li&gt;The solution is labor intensive, since many painstaking measurements would be
required.&lt;/li&gt;
  &lt;li&gt;The solution is non-transferable: it won’t work on a different problem, for
example if we change the map, without basically starting over from scratch.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now suppose instead that we made our model by pouring some kind of liquid putty
over the map and letting it harden. The putty is like a blank slate that
&lt;em&gt;learns&lt;/em&gt; the contours of the map, without us directing it where to go. What is
directing the putty? In this case, just gravity, i.e. a fairly simple rule that
acts on the molecules of the putty.&lt;/p&gt;

&lt;p&gt;Nevertheless, after the process, the putty now in some sense contains all of
the relevant information of the map. We’ve created a mold of the map that 
&lt;em&gt;knows&lt;/em&gt; about all of the mountains and valleys and so on.&lt;/p&gt;

&lt;p&gt;What if the topographical map of the U.S. was swapped out for a map of Canada?
The procedure would need to be repeated, but the exact same substance (the
putty) can be used, and the steps are the same: let the putty flow over the map
and harden.&lt;/p&gt;

&lt;p&gt;What are the features of the putty approach?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Depending on the properties of the putty, it could actually learn to make a
better model (or a worse one) than a human measuring by hand.&lt;/li&gt;
  &lt;li&gt;It requires little to no mental labor: the &lt;em&gt;learning&lt;/em&gt; of the shape of the
terrain is essentially a mechanical process governed by simple rules.&lt;/li&gt;
  &lt;li&gt;The solution isn’t specific to the input - we could learn one map or another
using the same putty.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is in many ways what machine learning and especially deep learning is all
about: you start with an extremely flexible model like the putty, that can take
on many different shapes. This might be a mathematical model with many
parameters that can be adjusted. An extremely promising model currently being
used for this purpose in all sorts of applications is the deep neural network.&lt;/p&gt;

&lt;p&gt;Once you have your putty, you need some data that defines your problem. This is
like the original topographical map. The data has some shape that we want to
learn. The putty is allowed to change its shape, little by little, according to
some simple rules. While the actual putty moves to minimize the gravitational
potential energy, the neural network moves to optimize according to a goal or
rule that you’ve set in advance, like minimizing some error. By the end, the
putty has learned the shape of the map, or the neural network has learned the
&lt;em&gt;shape&lt;/em&gt; of the data.&lt;/p&gt;

&lt;h2 id=&quot;most-problems-are-just-topographical-maps&quot;&gt;Most problems are just topographical maps.&lt;/h2&gt;

&lt;p&gt;The beauty of this approach is that most problems can be reduced to this
problem of letting the putty learn to copy the topographical map. All data
lives in some mathematical space. For example, pictures of human faces can be
reduced to pixels, which can be reduced to a list of the colors of the pixels,
and those colors can be represented by numbers. So a picture of a human face is
a list of numbers. Viewing those numbers as coordinates, the human face becomes
a single point in the space of all possible images of a certain resolution. If
we want to learn to recognize human faces, we really just want to learn the
shape of all points in that larger space that actually represent human faces.
We want to learn the topography of a certain landscape, in other words.&lt;/p&gt;

&lt;p&gt;The manifold hypothesis is the idea that real world data sets (like pictures of
faces) in practice often have a relatively simple shape, out of all the
possible shapes they could have in principle (not the shape of faces, remember,
but the shape of the set of all possible human faces). The deep neural network
is a flexible enough object that it can learn the mountains and valleys of this
shape, all the small idiosyncrasies. For many kinds of data, this can already
be done at levels of skill beyond what humans can do on their own.&lt;/p&gt;

&lt;p&gt;So for example, if we wanted to write a computer program that recognized human
faces, we’d have to write code – an explicit algorithm – that described
everything we consciously know about human faces, the colors, the shapes, etc.
about how to tell if the picture we see is a face. This would be extremely
difficult and not very accurate.&lt;/p&gt;

&lt;p&gt;Even more so because we our brain recognizes a face, we likely can do it
without even thinking about it! We don’t have to think: does it have the
features and shapes and colors I expect? No, we just instantly realize it as a
face. This is because our brains are like a giant implementation of the putty:
a real-life neural network that has already been molded by our genes and our
experience to learn the topographical map of human faces. If we can’t
consciously express all of the rules by which we recognize faces, then we have
no real hope of writing those rules into an explicit algorithm. This is where
machine learning comes in. Instead of trying to write out the ruled explicitly,
i.e. making explicit measurements of every mountain and valley of the
face-space, we just create a putty, the neural network, and allow it to flow
over some data. In the end, we get a model that can recognize a human face that
works in much the same way our own brain recognizes a human face. With enough
training data and a big enough neural network, it could in principle learn to
recognize faces better and faster than a human brain. Yikes!&lt;/p&gt;

&lt;p&gt;Anyway, if you’ve read this far, you’ve got the basic idea of deep learning:
it’s all about the putty.&lt;/p&gt;</content><author><name>Justin Keller</name></author><summary type="html">How does machine learning work? An analogy.</summary></entry><entry><title type="html">The Beginning</title><link href="https://samos570.github.io/the-beginning/" rel="alternate" type="text/html" title="The Beginning" /><published>2018-06-25T00:00:00-04:00</published><updated>2018-06-25T00:00:00-04:00</updated><id>https://samos570.github.io/the-beginning</id><content type="html" xml:base="https://samos570.github.io/the-beginning/">&lt;h2 id=&quot;rise-of-the-machines&quot;&gt;Rise of the Machines&lt;/h2&gt;

&lt;p&gt;Machine learning is a rapidly developing field at the intersection of computer
science and mathematics.  Recent breakthroughs in &lt;a href=&quot;https://en.wikipedia.org/wiki/Deep_learning&quot;&gt;deep neural networks&lt;/a&gt; in the
last decade are paving the way for amazing applications in the near-term, like
&lt;a href=&quot;https://www.wired.com/tag/self-driving-cars/&quot;&gt;self-driving cars&lt;/a&gt; and personal assistants capable of &lt;a href=&quot;https://ai.googleblog.com/2018/05/duplex-ai-system-for-natural-conversation.html&quot;&gt;carrying out human-like
conversations&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;These technologies, which aim to achieve human or superhuman levels of
performance on very specific tasks, are examples of so-called &lt;a href=&quot;https://en.wikipedia.org/wiki/Weak_AI&quot;&gt;narrow
artificial intelligence&lt;/a&gt;. In the longer term, it might be possible to create an
&lt;a href=&quot;https://en.wikipedia.org/wiki/Artificial_general_intelligence&quot;&gt;artificial general intelligence&lt;/a&gt; at a human or even superhuman level and the
ways in which &lt;em&gt;that&lt;/em&gt; might change our world are difficult to imagine.  But
whatever they are, the changes are sure to be profound.&lt;/p&gt;

&lt;p&gt;Given the rapid changes that we’re likely to see in our lifetimes and the
degree to which AI is already impacting our lives, it will become increasingly
important for even non-experts to understand a bit about how artificial
intelligence works. For example, to make more informed decisions about public
policy or just to have a better idea about something that could change the
world more drastically than when humans harnessed electricity.&lt;/p&gt;

&lt;h2 id=&quot;taking-the-plunge&quot;&gt;Taking the Plunge&lt;/h2&gt;

&lt;p&gt;I’m a mathematician who has decided to leave college teaching to explore these
ideas and see where they lead. In these pages I’m going to try to explain all
sorts of mathematical topics that are needed to get a handle on machine
learning, in many cases as I learn about them myself. These will range from the
very basic to the very complex and so my hope is that everyone will be able to
find a place to get started. If, like me, you’re interested in finding out what
machine learning is all about, read on.&lt;/p&gt;</content><author><name>Justin Keller</name></author><summary type="html">Rise of the Machines</summary></entry></feed>